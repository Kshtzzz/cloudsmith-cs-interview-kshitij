name: Publish Python Package

on:
  workflow_run:
    workflows: ["Build Python Package"]
    types:
      - completed
    branches:
      - main

  workflow_dispatch:

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_REPOSITORY: "staging"
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

permissions:
  contents: read
  actions: read

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-package
          path: dist

      - name: List directory contents
        run: ls -la dist/
        shell: bash

      - name: Verify Cloudsmith Repository
        run: |
          echo "Checking Cloudsmith Repository..."
          curl -H "Authorization: Bearer ${{ secrets.CLOUDSMITH_API_KEY }}" \
               "https://api.cloudsmith.io/v1/repos/${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }}/" || exit 1
        shell: bash

      - name: Install Cloudsmith CLI
        run: |
          curl -1sLf "https://dl.cloudsmith.io/public/cloudsmith/cli/setup.deb.sh" | sudo -E bash
          sudo apt-get update && sudo apt-get install -y cloudsmith-cli
        shell: bash

      - name: Push package to Cloudsmith
        run: |
          set -x  # Enable debugging
          if ! ls dist/*.tar.gz 1> /dev/null 2>&1; then
            echo "‚ùå No package found to upload"
            exit 1
          fi
          echo "üöÄ Uploading package to Cloudsmith: ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }}"
          cloudsmith push python ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }} dist/*.tar.gz --republish
        shell: bash
