name: Publish Python Package

on:
  workflow_dispatch:

env:
  CLOUDSMITH_NAMESPACE: ${{ vars.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_REPOSITORY: "staging"
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}

permissions:
  contents: read
  actions: read

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch latest workflow run ID
        run: |
          LATEST_RUN_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" \
            | jq -r '.artifacts[] | select(.name=="python-package") | .id' | sort -nr | head -n1)

          if [ -z "$LATEST_RUN_ID" ] || [ "$LATEST_RUN_ID" = "null" ]; then
            echo "No previous artifact found!"
            exit 1
          fi

          echo "Found artifact ID: $LATEST_RUN_ID"
          echo "ARTIFACT_ID=$LATEST_RUN_ID" >> $GITHUB_ENV

      - name: Download artifact
        run: |
          ARTIFACT_URL="https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{ env.ARTIFACT_ID }}/zip"
          curl -L -o artifact.zip -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$ARTIFACT_URL"

          mkdir -p dist
          unzip artifact.zip -d dist

      - name: List directory contents
        run: ls -la dist/

      - name: Push package to Cloudsmith
        run: |
          if ! ls dist/*.tar.gz 1> /dev/null 2>&1; then
            echo "No package found to upload"
            exit 1
          fi
          cloudsmith push python ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }} dist/*.tar.gz --republish
